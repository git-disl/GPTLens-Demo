[
    {
        "function_name": "distr",
        "code": "function distr(address _to, uint256 _amount) canDistr private returns (bool) { totalDistributed = totalDistributed.add(_amount); totalRemaining = totalRemaining.sub(_amount); balances[_to] = balances[_to].add(_amount); emit Distr(_to, _amount); emit Transfer(address(0), _to, _amount); return true; if (totalDistributed >= totalSupply) { distributionFinished = true; } }",
        "vulnerability": "Unchecked return value",
        "reason": "The return statement is placed before the condition to check if totalDistributed is greater than or equal to totalSupply. Therefore, the condition will never be checked and the distributionFinished will always remain false.",
        "file_name": "2019-15078.sol",
        "label": "Typo Constructor",
        "description": "An issue was discovered in a smart contract implementation for AIRDROPX BORN through 2019-05-29, an Ethereum token. The name of the constructor has a typo (wrong case: XBornID versus XBORNID) that allows an attacker to change the owner of the contract and obtain cryptocurrency for free."
    },
    {
        "function_name": "getTokens",
        "code": "function getTokens() payable canDistr onlyWhitelist public { if (value > totalRemaining) { value = totalRemaining; } require(value <= totalRemaining); address investor = msg.sender; uint256 toGive = value; distr(investor, toGive); if (toGive > 0) { blacklist[investor] = true; } if (totalDistributed >= totalSupply) { distributionFinished = true; } value = value.div(100000).mul(99999); }",
        "vulnerability": "Reentrancy",
        "reason": "The function getTokens() is vulnerable to reentrancy attack. It directly calls the distr() function which alters the state of the contract. An attacker can call the getTokens() function recursively to drain ether.",
        "file_name": "2019-15078.sol",
        "label": "Typo Constructor",
        "description": "An issue was discovered in a smart contract implementation for AIRDROPX BORN through 2019-05-29, an Ethereum token. The name of the constructor has a typo (wrong case: XBornID versus XBORNID) that allows an attacker to change the owner of the contract and obtain cryptocurrency for free."
    },
    {
        "function_name": "withdraw",
        "code": "function withdraw() onlyOwner public { uint256 etherBalance = address(this).balance; owner.transfer(etherBalance); }",
        "vulnerability": "Unchecked return values",
        "reason": "The return value of owner.transfer(etherBalance) is not checked. This can lead to an unchecked-underflow/overflow vulnerability if the call fails and the state of the contract is not updated.",
        "file_name": "2019-15078.sol",
        "label": "Typo Constructor",
        "description": "An issue was discovered in a smart contract implementation for AIRDROPX BORN through 2019-05-29, an Ethereum token. The name of the constructor has a typo (wrong case: XBornID versus XBORNID) that allows an attacker to change the owner of the contract and obtain cryptocurrency for free."
    }
]