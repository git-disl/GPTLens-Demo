[
    {
        "function_name": "setOwner",
        "code": "function setOwner(address _owner) returns (bool success) { owner = _owner; return true; }",
        "vulnerability": "Ownership Takeover",
        "reason": "Any address can call 'setOwner()' function to gain ownership of the contract. The function should have been protected by 'onlyOwner' modifier, but it is not. Thus, an attacker could take over the contract and manipulate it to their advantage.",
        "file_name": "2018-10666.sol",
        "label": "Access Control",
        "description": "The Owned smart contract implementation for Aurora IDEX Membership (IDXM), an Ethereum ERC20 token, allows attackers to acquire contract ownership because the setOwner function is declared as public. A new owner can subsequently modify variables."
    },
    {
        "function_name": "uploadBalances",
        "code": "function uploadBalances(address[] addresses, uint256[] balances) onlyOwner { require(!balancesLocked); require(addresses.length == balances.length); uint256 sum; for (uint256 i = 0; i < uint256(addresses.length); i++) { sum = safeAdd(sum, safeSub(balances[i], balanceOf[addresses[i]])); balanceOf[addresses[i]] = balances[i]; } balanceOf[owner] = safeSub(balanceOf[owner], sum); }",
        "vulnerability": "Arbitrary balance manipulation",
        "reason": "The 'uploadBalances()' function allows the owner of the contract to arbitrarily set balances of any address. This could lead to theft of funds or other types of fraudulent activities.",
        "file_name": "2018-10666.sol",
        "label": "Access Control",
        "description": "The Owned smart contract implementation for Aurora IDEX Membership (IDXM), an Ethereum ERC20 token, allows attackers to acquire contract ownership because the setOwner function is declared as public. A new owner can subsequently modify variables."
    },
    {
        "function_name": "setExportFee",
        "code": "function setExportFee(address addr, uint256 fee) onlyOwner { require(addr != 0x00000000000000000000000000000000000000ff); exportFee[addr] = fee; }",
        "vulnerability": "Arbitrary fee manipulation",
        "reason": "The 'setExportFee()' function allows the owner of the contract to arbitrarily set fees of any address. This could be used to perform unauthorized actions, such as arbitrarily increasing fees for certain addresses.",
        "file_name": "2018-10666.sol",
        "label": "Access Control",
        "description": "The Owned smart contract implementation for Aurora IDEX Membership (IDXM), an Ethereum ERC20 token, allows attackers to acquire contract ownership because the setOwner function is declared as public. A new owner can subsequently modify variables."
    }
]