[
    {
        "function_name": "mint",
        "vulnerability": "Arbitrary Minting",
        "criticism": "The reasoning is correct. The mint function is indeed only limited by the 'ico' address. If the 'ico' address is compromised, it can arbitrarily mint tokens. However, the severity and profitability of this vulnerability are dependent on the security of the 'ico' address. If the 'ico' address is well-secured, the risk is low. If not, the risk is high.",
        "correctness": 7,
        "severity": 5,
        "profitability": 5,
        "reason": "The mint function is only limited by the 'ico' address. If the 'ico' address is compromised, it can arbitrarily mint tokens.",
        "code": "function mint(address holder, uint value) public { require(msg.sender == ico); require(value > 0); require(totalSupply + value <= TOKEN_LIMIT); balances[holder] += value; totalSupply += value; Transfer(0x0, holder, value); }",
        "label": "Integer Overflow",
        "file_name": "2018-11335.sol",
        "description": "GVToken Genesis Vision (GVT) is a smart contract running on Ethereum. The mint function has an integer overflow that allows minted tokens to be arbitrarily retrieved by the contract owner."
    },
    {
        "function_name": "setMigrationAgent",
        "vulnerability": "Arbitrary Migration Agent Setting",
        "criticism": "The reasoning is correct. The 'setMigrationAgent' function is indeed only limited by the 'migrationMaster' address. If the 'migrationMaster' address is compromised, an arbitrary account can be set as the migration agent. However, the severity and profitability of this vulnerability are dependent on the security of the 'migrationMaster' address. If the 'migrationMaster' address is well-secured, the risk is low. If not, the risk is high.",
        "correctness": 7,
        "severity": 5,
        "profitability": 5,
        "reason": "The 'setMigrationAgent' function is only limited by the 'migrationMaster' address. If the 'migrationMaster' address is compromised, an arbitrary account can be set as the migration agent.",
        "code": "function setMigrationAgent(address _agent) external { require(migrationAgent == 0); require(msg.sender == migrationMaster); migrationAgent = _agent; }",
        "label": "Integer Overflow",
        "file_name": "2018-11335.sol",
        "description": "GVToken Genesis Vision (GVT) is a smart contract running on Ethereum. The mint function has an integer overflow that allows minted tokens to be arbitrarily retrieved by the contract owner."
    },
    {
        "function_name": "setMigrationMaster",
        "vulnerability": "Arbitrary Migration Master Setting",
        "criticism": "The reasoning is correct. The 'setMigrationMaster' function is indeed only limited by the 'migrationMaster' address. If the 'migrationMaster' address is compromised, an arbitrary account can be set as the migration master. However, the severity and profitability of this vulnerability are dependent on the security of the 'migrationMaster' address. If the 'migrationMaster' address is well-secured, the risk is low. If not, the risk is high.",
        "correctness": 7,
        "severity": 5,
        "profitability": 5,
        "reason": "The 'setMigrationMaster' function is only limited by the 'migrationMaster' address. If the 'migrationMaster' address is compromised, an arbitrary account can be set as the migration master.",
        "code": "function setMigrationMaster(address _master) external { require(msg.sender == migrationMaster); require(_master != 0); migrationMaster = _master; }",
        "label": "Integer Overflow",
        "file_name": "2018-11335.sol",
        "description": "GVToken Genesis Vision (GVT) is a smart contract running on Ethereum. The mint function has an integer overflow that allows minted tokens to be arbitrarily retrieved by the contract owner."
    }
]